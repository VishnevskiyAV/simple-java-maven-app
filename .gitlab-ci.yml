image: maven

variables:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

cache:
  paths:
    - .m2/repository/
    - target/

stages:
  - analyze
  - build
  - test
  - package
  - artifact
  - deploy

codecheck:
  stage: analyze                                                    
  variables:
    # Defines the location of the analysis task cache
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    # Shallow cloning needs to be disabled.
    # See https://docs.sonarqube.org/latest/analysis/gitlab-cicd/.
    GIT_DEPTH: 0
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - mvn clean verify sonar:sonar -Dsonar.login=${SONAR_TOKEN}
    - echo "The code has been analyzed"
  allow_failure: true
  rules:
    # SonarQube CommunityEdition only supports analyzing a single branch.
    # So only run on main.
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: on_success
    - when: never
    
codebuild:
  stage: build 
  script:   
    - mvn $MAVEN_CLI_OPTS compile
    - echo "The code has been build"
  only: 
    - main 

codetest: 
  stage: test 
  script: 
    - mvn $MAVEN_CLI_OPTS test 
    - echo "The code has been tested" 
  only: 
    - main 

codepackage: 
  stage: package 
  script: 
    - mvn $MAVEN_CLI_OPTS clean package -Dmaven.test.skip=true 
    - echo "Packaging the code" 
  artifacts: 
    name: "$CI_PIPELINE_ID"
    paths: 
        - target/*.jar 
  only: 
    - main 

codeartifact: 
  stage: artifact 
  script: 
    - mvn $MAVEN_CLI_OPTS deploy -Dmaven.test.skip=true 
    - echo "installing the package in local repository" 
  only: 
    - main

codedeploy:
  stage: deploy
  before_script:
    - chmod 400 $SSH
  script:
    - ssh -o StrictHostKeyChecking=no -i $SSH ubuntu@ec2-35-157-50-206.eu-central-1.compute.amazonaws.com "
      wget "${Nexus_REPO_URL}/releases/com/mycompany/app/my-app//0.${CI_PIPELINE_ID}/my-app-0.${CI_PIPELINE_ID}.jar" &&
      java -jar my-app-0.${CI_PIPELINE_ID}.jar"
